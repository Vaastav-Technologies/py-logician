# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: 📤 Upload Python Package

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: 🏗️ Build release distributions
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          python -m build
          twine check dist/*
          SDIST_FILE=$(ls dist/*.tar.gz)
          echo "Checking contents of $SDIST_FILE..."
          tar -tzf "$SDIST_FILE" | grep "py\.typed" && echo "✅ py.typed found in sdist!" || (echo "❌ py.typed missing!" && exit 1)

      - name: 📦 Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  testpypi-publish:
    name: 📊 Publish to TestPyPI
    runs-on: ubuntu-latest
    needs: release-build
    permissions:
      id-token: write

    steps:
      - name: 📥 Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: 🚀 Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist/

  pypi-publish:
    name: 📦 Publish to PyPI
    runs-on: ubuntu-latest
    needs:
      - release-build
      - testpypi-publish
    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/py-commons

    steps:
      - name: 📥 Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: 🚀 Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
